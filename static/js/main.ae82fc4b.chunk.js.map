{"version":3,"sources":["components/SearchBar.jsx","components/WeatherForecast.jsx","components/WeatherGif.jsx","constants.js","App.jsx","index.jsx"],"names":["SearchBar","onFormSubmit","weatherError","useState","locationText","setLocationText","dropdownSelected","setDropdownSelected","dropDownVisible","setDropDownVisible","selected","useRef","handleKeyPress","e","key","preventDefault","current","textContent","value","className","onSubmit","onChange","handleInputChange","onSelect","address","searchOptions","types","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","htmlFor","id","placeholder","onKeyDown","map","suggestion","i","style","display","color","cursor","ref","description","placeId","WeatherForecast","currentWeather","weatherTitle","weatherDescription","Math","round","temp","tempMin","tempMax","humidity","WeatherGif","weatherGif","alt","src","weatherGifs","Drizzle","Thunderstorm","Rain","Snow","Mist","Smoke","Haze","Dust","Fog","Sand","Ash","Squall","Tornado","Clear","Clouds","Error","Default","App","location","setLocation","setWeatherError","setCurrentWeather","setWeatherGif","loading","setLoading","onLocationSubmit","newLocation","a","fetch","response","ok","json","error","sample","body","gifsArray","default","spinnerOverride","css","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae82fc4b.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\nconst SearchBar = ({ onFormSubmit, weatherError }) => {\n  const [locationText, setLocationText] = useState('');\n  const [dropdownSelected, setDropdownSelected] = useState(0);\n  const [dropDownVisible, setDropDownVisible] = useState(false);\n  const selected = useRef();\n\n  const handleSelect = (address) => {\n    setLocationText(address);\n    setDropDownVisible(false);\n    onFormSubmit(address);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      setDropdownSelected(dropdownSelected + 1);\n    }\n    if (e.key === 'ArrowUp' && dropdownSelected > 0) {\n      e.preventDefault();\n      setDropdownSelected(dropdownSelected - 1);\n    }\n    if (e.key === 'Enter') {\n      setDropDownVisible(false);\n      if (!selected.current || !selected.current.textContent) {\n        onFormSubmit(e.value);\n      } else {\n        onFormSubmit(selected.current.textContent);\n      }\n      setDropdownSelected(0);\n      setLocationText('');\n    }\n  };\n\n  const handleInputChange = (value) => {\n    setLocationText(value);\n    setDropDownVisible(true);\n  };\n\n  const addressSearchOptions = {\n    types: ['(cities)'],\n    componentRestrictions: { country: 'us' },\n  };\n\n  return (\n    <div className=\"search-bar ui segment\">\n      <form onSubmit={(e) => e.preventDefault()} className=\"ui form\">\n        <div className=\"field\">\n          <PlacesAutocomplete\n            value={locationText}\n            onChange={(value) => handleInputChange(value)}\n            onSelect={handleSelect}\n            searchOptions={addressSearchOptions}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps }) => (\n              <div>\n                <label htmlFor=\"city\">\n                  Where you at?\n                  <input\n                    id=\"city\"\n                    {...getInputProps({\n                      placeholder: 'City, State, USA',\n                      className: 'location-search-input',\n                    })}\n                    onKeyDown={handleKeyPress}\n                  />\n                </label>\n                <div className=\"autocomplete-dropdown-container\">\n                  {suggestions.map((suggestion, i) => (\n                    <div\n                      style={!dropDownVisible ? { display: 'none' } : {}}\n                      key={suggestion.placeId}\n                      {...getSuggestionItemProps(suggestion)}\n                    >\n                      <span\n                        style={i === dropdownSelected ? { color: 'blue', cursor: 'pointer' } : { cursor: 'pointer' }}\n                        ref={(i === dropdownSelected) ? selected : null}\n                      >\n                        {suggestion.description}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n        </div>\n      </form>\n      <div className=\"ui warning message\" style={!weatherError ? { display: 'none' } : {}}>\n        <p>{(typeof weatherError === 'string') ? weatherError : 'Error fetching weather for location'}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\n\nconst WeatherForecast = ({ currentWeather }) => {\n  if (!currentWeather) return null;\n\n  return (\n    <div className=\"ui grid\">\n      <div className=\"ui row\">\n        <h4 className=\"sixteen wide column\">{currentWeather.weatherTitle}</h4>\n      </div>\n      <div className=\"ui row\">\n        <h5 className=\"sixteen wide column\">{currentWeather.weatherDescription}</h5>\n      </div>\n      <div className=\"ui row\">\n        <span className=\"sixteen wide column\">\n          Current Temperature:&emsp;\n          {Math.round(currentWeather.temp)}\n          °F\n        </span>\n      </div>\n      <div className=\"ui row\">\n        <span className=\"sixteen wide column\">\n          Today&apos;s Low:&emsp;\n          {Math.round(currentWeather.tempMin)}\n          °F\n        </span>\n      </div>\n      <div className=\"ui row\">\n        <span className=\"sixteen wide column\">\n          Today&apos;s High:&emsp;\n          {Math.round(currentWeather.tempMax)}\n          °F\n        </span>\n      </div>\n      <div className=\"ui row\">\n        <span className=\"sixteen wide column\">\n          Today&apos;s Humidity:&emsp;\n          {Math.round(currentWeather.humidity)}\n          %\n        </span>\n      </div>\n      <div className=\"ui row\">\n        <span className=\"sixteen wide column\">\n          Wind Speed:&emsp;\n          {Math.round(currentWeather.humidity)}\n          MPH\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherForecast;\n","import React from 'react';\n\nconst WeatherGif = ({ weatherGif }) => {\n  if (!weatherGif) return null;\n\n  return (\n    <div>\n      <img alt=\"weatherGif\" src={weatherGif} />\n    </div>\n  );\n};\n\nexport default WeatherGif;\n","// keys match weather options: https://openweathermap.org/weather-conditions\nconst weatherGifs = {\n  Drizzle: [\n    'https://media.giphy.com/media/xT9GEpqOhIhNcV5etq/giphy.gif',\n    'https://media.giphy.com/media/LqU7iJHZZ5OAVLYjXj/giphy.gif',\n  ],\n  Thunderstorm: [\n    'https://media.giphy.com/media/l0G19akjZlIT5YzL2/giphy.gif',\n    'https://media.giphy.com/media/KHKoSQgiIBOIU/giphy.gif',\n    'https://media.giphy.com/media/qRY3cPYRkyQh2/giphy.gif',\n  ],\n  Rain: [\n    'https://media.giphy.com/media/l0HlPtBCscbYiLfR6/giphy.gif',\n    'https://media.giphy.com/media/iBRHf2C64eZDa/giphy.gif',\n    'https://media.giphy.com/media/Il9f7ZhytEiI0/giphy.gif',\n  ],\n  Snow: [\n    'https://media.giphy.com/media/xTcnTehwgRcbgymhTW/giphy.gif',\n    'https://media.giphy.com/media/3o6ZsUJ0Ry3ahJF16w/giphy.gif',\n    'https://media.giphy.com/media/13lLTicyzjEN8Y/giphy.gif',\n  ],\n  Mist: [\n    'https://media.giphy.com/media/xUA7b1AZjL2fQNUp8s/giphy.gif',\n  ],\n  Smoke: [\n    'https://media.giphy.com/media/HknSLLEbzZCoM/giphy.gif',\n  ],\n  Haze: [\n    'https://media.giphy.com/media/t78h4Pt0pD6Ao/giphy.gif',\n  ],\n  Dust: [\n    'https://media.giphy.com/media/QAy9fEGI7tzSqXLuFg/giphy.gif',\n  ],\n  Fog: [\n    'https://media.giphy.com/media/oAbvMXvah1M0U/giphy.gif',\n  ],\n  Sand: [\n    'https://media.giphy.com/media/EaVouuqujYqiI/giphy.gif',\n  ],\n  Ash: [\n    'https://media.giphy.com/media/5DfC15519jNvy/giphy.gif',\n  ],\n  Squall: [\n    'https://media.giphy.com/media/5DfC15519jNvy/giphy.gif',\n  ],\n  Tornado: [\n    'https://media.giphy.com/media/5QXkoDtmD8NGi7MuFP/giphy.gif',\n  ],\n  Clear: [\n    'https://media.giphy.com/media/qw9ffzu38Dt6M/giphy.gif',\n    'https://media.giphy.com/media/26BRq3yxyHFAt9AYw/giphy.gif',\n    'https://media.giphy.com/media/3VSM58Eu7kR4A/giphy.gif',\n  ],\n  Clouds: [\n    'https://media.giphy.com/media/lOkbL3MJnEtHi/giphy.gif',\n    'https://media.giphy.com/media/alEGxmahCCywE/giphy.gif',\n    'https://media.giphy.com/media/l0HlQdk8kI9KIOjBe/giphy.gif',\n  ],\n  Error: [\n    'https://media.giphy.com/media/keg3HTUKSGrp8HayFg/giphy.gif',\n    'https://media.giphy.com/media/dWLREYF83ciQg/giphy.gif',\n  ],\n  Default: [\n    'https://media.giphy.com/media/za5xikuRr0OzK/giphy.gif',\n  ],\n};\n\nexport default weatherGifs;\n","import React, { useState } from 'react';\nimport { css } from '@emotion/react';\nimport sample from 'lodash.sample';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport SearchBar from './components/SearchBar';\nimport WeatherForecast from './components/WeatherForecast';\nimport WeatherGif from './components/WeatherGif';\nimport weatherGifs from './constants';\nimport './App.css';\n\nconst apiUrl = process.env.NODE_ENV === 'production'\n  ? 'https://video-browser-304606.uc.r.appspot.com/'\n  : 'http://localhost:8000/v1';\n\nfunction App() {\n  const [location, setLocation] = useState('');\n  const [weatherError, setWeatherError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [weatherGif, setWeatherGif] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const onLocationSubmit = async (newLocation) => {\n    setCurrentWeather(null);\n    setLocation('');\n    setWeatherGif('');\n    setLoading(true);\n\n    const response = await fetch(`${apiUrl}/weather?location=${newLocation}`);\n\n    if (!response.ok) {\n      const { error } = await response.json();\n      setLoading(false);\n      setWeatherError(error);\n      setWeatherGif(sample(weatherGifs.Error));\n      setCurrentWeather(null);\n    } else {\n      const { body } = await response.json();\n      setLocation(newLocation);\n      setLoading(false);\n      setCurrentWeather(body);\n      setWeatherError('');\n\n      const gifsArray = weatherGifs[body.weatherTitle]\n        ? weatherGifs[body.weatherTitle]\n        : weatherGifs.default;\n      setWeatherGif(sample(gifsArray));\n    }\n  };\n\n  const spinnerOverride = css`\n    display: block;\n    margin: 0 auto;\n  `;\n\n  return (\n    <div className=\"ui container\">\n      <h2 className=\"ui header\">The Greatest* Weather App</h2>\n      <span className=\"clarification\">*This claim is certainly and greatly exaggerated.</span>\n      <SearchBar onFormSubmit={onLocationSubmit} weatherError={weatherError} />\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <ClipLoader css={spinnerOverride} color=\"blue\" loading={loading} size={150} />\n          <div className=\"sixteen wide column\">\n            { (location) ? (\n              <h3 className=\"ui header\">\n                Current weather for&nbsp;\n                {location}\n              </h3>\n            ) : ''}\n          </div>\n        </div>\n        <div className=\"ui row\">\n          <div className=\"eight wide column\">\n            <WeatherGif weatherGif={weatherGif} />\n          </div>\n          <div className=\"eight wide column\">\n            <WeatherForecast currentWeather={currentWeather} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}